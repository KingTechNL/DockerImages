name: .NET build pipeline

# Triggers
on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

#: Jobs to execute
jobs:
  ## Build all projects
  build:
    runs-on: ubuntu-latest #self-hosted

    steps:
    ### Checkout repo
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 0
    ### Generate version number
    - name: Get version
      id: get_version
      uses: kingtechnl/githubactions/gitversion@main

    ### Create and publish docker images to DockerHub

    ### DockerFileCopy
    - name: Build and publish docker image
      if: success()
      uses: kingtechnl/githubactions/publish-docker@main
      with:
        registry_username: "${{ secrets.DOCKERHUB_USERNAME }}"
        registry_password: "${{ secrets.DOCKERHUB_TOKEN }}"
        image_name: "kingtech_filecopy"
        tags: "${{ steps.get_version.outputs.version }};${{ steps.get_version.outputs.branchTag }};latest"
        docker_file: "DockerFileCopy/Dockerfile"

    ### SatisfactoryMapProxy
    - name: Build and publish docker image
      if: success()
      uses: kingtechnl/githubactions/publish-docker@main
      with:
        registry_username: "${{ secrets.DOCKERHUB_USERNAME }}"
        registry_password: "${{ secrets.DOCKERHUB_TOKEN }}"
        image_name: "satisfactory-map"
        tags: "${{ steps.get_version.outputs.version }};${{ steps.get_version.outputs.branchTag }};latest"
        docker_file: "SatisfactoryMap/satisfactory-map/Dockerfile"
    ### SatisfactoryLatestSymlinker
    - name: Build and publish docker image
      if: success()
      uses: kingtechnl/githubactions/publish-docker@main
      with:
        registry_username: "${{ secrets.DOCKERHUB_USERNAME }}"
        registry_password: "${{ secrets.DOCKERHUB_TOKEN }}"
        image_name: "satisfactory-latest"
        tags: "${{ steps.get_version.outputs.version }};${{ steps.get_version.outputs.branchTag }};latest"
        docker_file: "SatisfactoryMap/satisfactory-latest/Dockerfile"
    